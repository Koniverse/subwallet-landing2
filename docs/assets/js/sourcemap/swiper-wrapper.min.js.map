{"version":3,"sources":["swiper-wrapper.js"],"names":["$","parseNumberValue","setting","defaultValue","undefined","isNaN","parseInt","parseItemValue","parseItemGroupValue","inherit","itemsPerView","setSlideHeight","that","$wrapperEl","find","css","height","currentSlide","activeIndex","itemHeight","slides","slidesPerView","params","wrapperHeight","spaceBetween","$el","update","fn","subwalletSwiper","options","$swiper","settings","extend","this","each","$wrapControls","$customBtn","$swiperPrev","$swiperNext","$swiperAltArrows","$slider","$sliderInner","children","first","sliderSettings","data","$sliderContainer","itemsDesktop","itemsWideScreen","itemsLaptop","itemsTabletExtra","itemsTablet","itemsMobileExtra","itemsMobile","itemsGroupDesktop","itemsGroupWideScreen","itemsGroupLaptop","itemsGroupTabletExtra","itemsGroupTablet","itemsGroupMobileExtra","itemsGroupMobile","gutterDesktop","gutterWideScreen","gutterLaptop","gutterTabletExtra","gutterTablet","gutterMobileExtra","gutterMobile","speed","swiperOptions","init","watchSlidesVisibility","slidesPerGroup","resizeObserver","breakpoints","361","576","768","992","1200","1600","watchOverflow","slideColumns","slidesPerColumn","initialSlide","autoHeight","simulateTouch","effect","fadeEffect","crossFade","loop","loopedSlides","centered","centeredSlides","autoplay","delay","disableOnInteraction","autoplayReverseDirection","reverseDirection","freeMode","wrapControls","$wrapControlsWrap","append","nav","customNav","$fractionWrapper","hasClass","pagination","el","type","clickable","renderCustom","swiper","current","total","currentStr","toString","totalStr","renderBullet","index","className","navStyle","$swiperNavButtons","$swiperNavButtonsWrap","navAlignedBy","navigation","nextEl","prevEl","$swiperPaginationWrap","$swiperPagination","$swiperPaginationContainerWrap","paginationAlignedBy","paginationType","paginationDynamicBullets","dynamicBullets","paginationText","padStart","mousewheel","enabled","vertical","direction","slideToClickedSlide","touchRatio","Swiper","layerTransition","on","filter","addClass","visibleSlides","removeClass","verticalAutoHeight","attr","laziestloader","elementorWaypoint","_self","element","llImages","length","unwrap","trigger","offset","triggerOnce","centeredHightlight","$thisSlide","slidePrev","slideNext","document","jQuery"],"mappings":"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","file":"../swiper-wrapper.min.js","sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\t$.fn.subwalletSwiper = function( options ) {\n\t\t\tvar defaults = {};\n\t\t\tvar settings = $.extend( {}, defaults, options );\n\n\t\t\tvar $swiper;\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar $slider = $( this );\n\t\t\t\tvar $sliderInner = $slider.children( '.swiper-inner' ).first();\n\t\t\t\tvar sliderSettings = $slider.data();\n\n\t\t\t\tvar $sliderContainer      = $sliderInner.children( '.swiper-container' ).first(),\n\t\t\t\t    itemsDesktop          = parseItemValue( sliderSettings.itemsDesktop, 1 ), // Slides Per View.\n\t\t\t\t    itemsWideScreen       = parseItemValue( sliderSettings.itemsWideScreen, itemsDesktop ),\n\t\t\t\t    itemsLaptop           = parseItemValue( sliderSettings.itemsLaptop, itemsDesktop ),\n\t\t\t\t    itemsTabletExtra      = parseItemValue( sliderSettings.itemsTabletExtra, itemsLaptop ),\n\t\t\t\t    itemsTablet           = parseItemValue( sliderSettings.itemsTablet, itemsTabletExtra ),\n\t\t\t\t    itemsMobileExtra      = parseItemValue( sliderSettings.itemsMobileExtra, itemsTablet ),\n\t\t\t\t    itemsMobile           = parseItemValue( sliderSettings.itemsMobile, itemsMobileExtra ),\n\t\t\t\t    itemsGroupDesktop     = parseItemGroupValue( sliderSettings.itemsGroupDesktop, itemsDesktop, itemsDesktop ), // Slides Per Group, Default same as Slides Per View.\n\t\t\t\t    itemsGroupWideScreen  = parseItemGroupValue( sliderSettings.itemsGroupWideScreen, itemsGroupDesktop, itemsWideScreen ),\n\t\t\t\t    itemsGroupLaptop      = parseItemGroupValue( sliderSettings.itemsGroupLaptop, itemsGroupDesktop, itemsLaptop ),\n\t\t\t\t    itemsGroupTabletExtra = parseItemGroupValue( sliderSettings.itemsGroupTabletExtra, itemsGroupLaptop, itemsTabletExtra ),\n\t\t\t\t    itemsGroupTablet      = parseItemGroupValue( sliderSettings.itemsGroupTablet, itemsGroupTabletExtra, itemsTablet ),\n\t\t\t\t    itemsGroupMobileExtra = parseItemGroupValue( sliderSettings.itemsGroupMobileExtra, itemsGroupTablet, itemsMobileExtra ),\n\t\t\t\t    itemsGroupMobile      = parseItemGroupValue( sliderSettings.itemsGroupMobile, itemsGroupMobileExtra, itemsMobile ),\n\t\t\t\t    gutterDesktop         = parseNumberValue( sliderSettings.gutterDesktop, 0 ), // Distance between slides.\n\t\t\t\t    gutterWideScreen      = parseNumberValue( sliderSettings.gutterWideScreen, gutterDesktop ),\n\t\t\t\t    gutterLaptop          = parseNumberValue( sliderSettings.gutterLaptop, gutterDesktop ),\n\t\t\t\t    gutterTabletExtra     = parseNumberValue( sliderSettings.gutterTabletExtra, gutterLaptop ),\n\t\t\t\t    gutterTablet          = parseNumberValue( sliderSettings.gutterTablet, gutterTabletExtra ),\n\t\t\t\t    gutterMobileExtra     = parseNumberValue( sliderSettings.gutterMobileExtra, gutterTablet ),\n\t\t\t\t    gutterMobile          = parseNumberValue( sliderSettings.gutterMobile, gutterMobileExtra ),\n\t\t\t\t    speed                 = parseNumberValue( sliderSettings.speed, 500 );\n\n\t\t\t\tvar swiperOptions = $.extend( {}, {\n\t\t\t\t\tinit: false,\n\t\t\t\t\twatchSlidesVisibility: true,\n\t\t\t\t\tslidesPerView: itemsMobile,\n\t\t\t\t\tslidesPerGroup: itemsGroupMobile,\n\t\t\t\t\tspaceBetween: gutterMobile,\n\t\t\t\t\tresizeObserver: true,\n\t\t\t\t\tbreakpoints: {\n\t\t\t\t\t\t// when window width is >=\n\t\t\t\t\t\t361: {\n\t\t\t\t\t\t\tslidesPerView: itemsMobileExtra,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupMobileExtra,\n\t\t\t\t\t\t\tspaceBetween: gutterMobileExtra\n\t\t\t\t\t\t},\n\t\t\t\t\t\t576: {\n\t\t\t\t\t\t\tslidesPerView: itemsTablet,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupTablet,\n\t\t\t\t\t\t\tspaceBetween: gutterTablet\n\t\t\t\t\t\t},\n\t\t\t\t\t\t768: {\n\t\t\t\t\t\t\tslidesPerView: itemsTabletExtra,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupTabletExtra,\n\t\t\t\t\t\t\tspaceBetween: gutterTabletExtra\n\t\t\t\t\t\t},\n\t\t\t\t\t\t992: {\n\t\t\t\t\t\t\tslidesPerView: itemsLaptop,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupLaptop,\n\t\t\t\t\t\t\tspaceBetween: gutterLaptop\n\t\t\t\t\t\t},\n\t\t\t\t\t\t1200: {\n\t\t\t\t\t\t\tslidesPerView: itemsDesktop,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupDesktop,\n\t\t\t\t\t\t\tspaceBetween: gutterDesktop\n\t\t\t\t\t\t},\n\t\t\t\t\t\t1600: {\n\t\t\t\t\t\t\tslidesPerView: itemsWideScreen,\n\t\t\t\t\t\t\tslidesPerGroup: itemsGroupWideScreen,\n\t\t\t\t\t\t\tspaceBetween: gutterWideScreen\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, settings );\n\n\t\t\t\tswiperOptions.watchOverflow = true;\n\n\t\t\t\tif ( sliderSettings.slideColumns ) {\n\t\t\t\t\tswiperOptions.slidesPerColumn = sliderSettings.slideColumns;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.initialSlide ) {\n\t\t\t\t\tswiperOptions.initialSlide = sliderSettings.initialSlide;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.autoHeight ) {\n\t\t\t\t\tswiperOptions.autoHeight = true;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof sliderSettings.simulateTouch !== 'undefined' && ! sliderSettings.simulateTouch ) {\n\t\t\t\t\tswiperOptions.simulateTouch = false;\n\t\t\t\t}\n\n\t\t\t\tif ( speed ) {\n\t\t\t\t\tswiperOptions.speed = speed;\n\t\t\t\t}\n\n\t\t\t\t// Maybe: fade, flip\n\t\t\t\tif ( sliderSettings.effect ) {\n\t\t\t\t\tswiperOptions.effect = sliderSettings.effect;\n\n\t\t\t\t\tif ( 'fade' === sliderSettings.effect ) {\n\t\t\t\t\t\tif ( 'custom' === sliderSettings.fadeEffect ) {\n\t\t\t\t\t\t\tswiperOptions.fadeEffect = {\n\t\t\t\t\t\t\t\tcrossFade: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswiperOptions.fadeEffect = {\n\t\t\t\t\t\t\t\tcrossFade: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.loop ) {\n\t\t\t\t\tswiperOptions.loop = true;\n\n\t\t\t\t\tif ( sliderSettings.loopedSlides ) {\n\t\t\t\t\t\tswiperOptions.loopedSlides = sliderSettings.loopedSlides;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.centered ) {\n\t\t\t\t\tswiperOptions.centeredSlides = true;\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.autoplay ) {\n\t\t\t\t\tswiperOptions.autoplay = {\n\t\t\t\t\t\tdelay: sliderSettings.autoplay,\n\t\t\t\t\t\tdisableOnInteraction: false\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( sliderSettings.autoplayReverseDirection ) {\n\t\t\t\t\t\tswiperOptions.autoplay.reverseDirection = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.freeMode ) {\n\t\t\t\t\tswiperOptions.freeMode = true;\n\t\t\t\t}\n\n\t\t\t\tvar $wrapControls;\n\n\t\t\t\tif ( sliderSettings.wrapControls ) {\n\t\t\t\t\tvar $wrapControlsWrap = $( '<div class=\"swiper-controls-wrap\"></div>' );\n\t\t\t\t\t$wrapControls = $( '<div class=\"swiper-controls\"></div>' );\n\n\t\t\t\t\t$wrapControlsWrap.append( $wrapControls );\n\t\t\t\t\t$slider.append( $wrapControlsWrap );\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.nav ) {\n\n\t\t\t\t\tif ( sliderSettings.customNav && sliderSettings.customNav !== '' ) {\n\t\t\t\t\t\tvar $customBtn = $( '#' + sliderSettings.customNav );\n\t\t\t\t\t\tvar $fractionWrapper = $( '.pagination-wrapper', $customBtn );\n\t\t\t\t\t\tvar $swiperPrev = $customBtn.find( '.slider-prev-btn' );\n\t\t\t\t\t\tvar $swiperNext = $customBtn.find( '.slider-next-btn' );\n\n\t\t\t\t\t\tif ( $customBtn.hasClass( 'style-02' ) ) {\n\t\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\t\tel: $fractionWrapper,\n\t\t\t\t\t\t\t\ttype: 'custom',\n\t\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\t\tvar currentStr = current.toString();\n\t\t\t\t\t\t\t\tvar totalStr = total.toString();\n\n\t\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + $customBtn.data( 'text' ) + '</div><div class=\"current\">' + currentStr + '</div><div class=\"separator\">/</div><div class=\"total\">' + totalStr + '</div></div>';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if ( $customBtn.hasClass( 'style-03' ) || $customBtn.hasClass( 'style-04' ) ) {\n\t\t\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\t\t\tel: $fractionWrapper,\n\t\t\t\t\t\t\t\ttype: 'bullets',\n\t\t\t\t\t\t\t\tclickable: true\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $swiperPrev = $( '<div class=\"swiper-nav-button swiper-button-prev\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\"></span></div>' );\n\t\t\t\t\t\tvar $swiperNext = $( '<div class=\"swiper-nav-button swiper-button-next\"><i class=\"nav-button-icon\"></i><span class=\"nav-button-text\"></span></div>' );\n\n\t\t\t\t\t\tif ( '03' === sliderSettings.navStyle ) {\n\t\t\t\t\t\t\tvar $arrowRightSvg = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1 8L21.2222 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M15.7773 1L22.7773 8L15.7773 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\t\tvar $arrowLeftSvg = '<svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23 8L2.77778 8\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M8.22266 1L1.22266 8L8.22266 15\" stroke=\"#000000\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>';\n\t\t\t\t\t\t\t$swiperPrev = $( '<div class=\"swiper-nav-button swiper-button-prev\">' + $arrowLeftSvg + '</div>' );\n\t\t\t\t\t\t\t$swiperNext = $( '<div class=\"swiper-nav-button swiper-button-next\">' + $arrowRightSvg + '</div>' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar $swiperNavButtons = $( '<div class=\"swiper-nav-buttons\"></div>' );\n\t\t\t\t\t\t$swiperNavButtons.append( $swiperPrev ).append( $swiperNext );\n\n\t\t\t\t\t\tvar $swiperNavButtonsWrap = $( '<div class=\"swiper-nav-buttons-wrap\"></div>' );\n\n\t\t\t\t\t\tif ( 'grid' == sliderSettings.navAlignedBy ) {\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.append( '<div class=\"container\"><div class=\"row\"><div class=\"col-sm-12\"></div></div></div>' );\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.find( '.col-sm-12' ).append( $swiperNavButtons );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$swiperNavButtonsWrap.append( $swiperNavButtons );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t\t\t$wrapControls.append( $swiperNavButtonsWrap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$sliderInner.append( $swiperNavButtonsWrap );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tswiperOptions.navigation = {\n\t\t\t\t\t\tnextEl: $swiperNext,\n\t\t\t\t\t\tprevEl: $swiperPrev\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.pagination ) {\n\t\t\t\t\tvar $swiperPaginationWrap = $( '<div class=\"swiper-pagination-wrap\"><div class=\"swiper-pagination-inner\"></div></div>' );\n\t\t\t\t\tvar $swiperPagination = $( '<div class=\"swiper-pagination\"></div>' );\n\n\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperPagination );\n\n\t\t\t\t\tvar $swiperPaginationContainerWrap = $( '<div class=\"swiper-pagination-container\"></div>' );\n\n\t\t\t\t\tif ( 'grid' == sliderSettings.paginationAlignedBy ) {\n\t\t\t\t\t\t$swiperPaginationContainerWrap.append( '<div class=\"container\"><div class=\"row\"><div class=\"col-sm-12\"></div></div></div>' );\n\t\t\t\t\t\t$swiperPaginationContainerWrap.find( '.col-sm-12' ).append( $swiperPaginationWrap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$swiperPaginationContainerWrap.append( $swiperPaginationWrap );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $wrapControls ) {\n\t\t\t\t\t\t$wrapControls.append( $swiperPaginationContainerWrap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$slider.append( $swiperPaginationContainerWrap );\n\t\t\t\t\t}\n\n\t\t\t\t\tvar paginationType = 'bullets';\n\n\t\t\t\t\tif ( sliderSettings.paginationType ) {\n\t\t\t\t\t\tpaginationType = sliderSettings.paginationType;\n\t\t\t\t\t}\n\n\t\t\t\t\tswiperOptions.pagination = {\n\t\t\t\t\t\tel: $swiperPagination,\n\t\t\t\t\t\ttype: paginationType,\n\t\t\t\t\t\tclickable: true\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( sliderSettings.paginationDynamicBullets ) {\n\t\t\t\t\t\tswiperOptions.pagination.dynamicBullets = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $slider.hasClass( 'pagination-style-04' ) ) {\n\t\t\t\t\t\tvar $swiperAltArrows = $( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperAltArrows );\n\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\tvar currentStr = current.toString();\n\t\t\t\t\t\t\tvar totalStr = total.toString();\n\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"text\">' + sliderSettings.paginationText + '</div><div class=\"current\">' + currentStr + '</div><div class=\"separator\">/</div><div class=\"total\">' + totalStr + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-03' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\tvar currentStr = current.toString();\n\t\t\t\t\t\t\tvar totalStr = total.toString();\n\n\t\t\t\t\t\t\t// Add leading 0.\n\t\t\t\t\t\t\tcurrentStr = currentStr.padStart( 2, '0' );\n\t\t\t\t\t\t\ttotalStr = totalStr.padStart( 2, '0' );\n\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + currentStr + '</div><div class=\"separator\"></div><div class=\"total\">' + totalStr + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-06' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderCustom = function( swiper, current, total ) {\n\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\tvar currentStr = current.toString();\n\t\t\t\t\t\t\tvar totalStr = total.toString();\n\n\t\t\t\t\t\t\t// Add leading 0.\n\t\t\t\t\t\t\tcurrentStr = currentStr.padStart( 2, '0' );\n\t\t\t\t\t\t\ttotalStr = totalStr.padStart( 2, '0' );\n\n\t\t\t\t\t\t\treturn '<div class=\"fraction\"><div class=\"current\">' + current + '<div class=\"separator\">/</div></div><div class=\"total\">' + total + '</div></div>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-07' ) ) {\n\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\t// Convert to string.\n\t\t\t\t\t\t\tvar indexStr = (\n\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t).toString();\n\n\t\t\t\t\t\t\t// Add leading 0.\n\t\t\t\t\t\t\tindexStr = indexStr.padStart( 2, '0' );\n\n\t\t\t\t\t\t\treturn '<span class=\"' + className + '\">' + indexStr + '<span class=\"dot\">.</span></span>';\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if ( $slider.hasClass( 'pagination-style-08' ) ) {\n\t\t\t\t\t\tvar $swiperAltArrows = $( '<div class=\"swiper-alt-arrow-button swiper-alt-arrow-prev\" data-action=\"prev\"></div><div class=\"swiper-alt-arrow-button swiper-alt-arrow-next\" data-action=\"next\"></div>' );\n\n\t\t\t\t\t\t$swiperPaginationWrap.find( '.swiper-pagination-inner' ).append( $swiperAltArrows );\n\n\t\t\t\t\t\tswiperOptions.pagination.renderBullet = function( index, className ) {\n\t\t\t\t\t\t\treturn '<span class=\"' + className + '\"></span>';\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.mousewheel ) {\n\t\t\t\t\tswiperOptions.mousewheel = {\n\t\t\t\t\t\tenabled: true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.vertical ) {\n\t\t\t\t\tswiperOptions.direction = 'vertical';\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.slideToClickedSlide ) {\n\t\t\t\t\tswiperOptions.slideToClickedSlide = true;\n\t\t\t\t\tswiperOptions.touchRatio = 0.2;\n\t\t\t\t}\n\n\t\t\t\t$swiper = new Swiper( $sliderContainer, swiperOptions );\n\n\t\t\t\tif ( sliderSettings.layerTransition ) {\n\t\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar currentSlide = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\t\tcurrentSlide.addClass( 'animated' );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * index = $swiper.activeIndex;\n\t\t\t\t\t\t * currentSlide = slides.eq( index );\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Work properly if slides per view is greater than 1\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar visibleSlides = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\t\tvisibleSlides.addClass( 'animated' );\n\n\t\t\t\t\t\tslides.removeClass( 'swiper-ken-burn-active' );\n\t\t\t\t\t\tvisibleSlides.addClass( 'swiper-ken-burn-active' );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\t\tslides.removeClass( 'animated' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( sliderSettings.vertical && sliderSettings.verticalAutoHeight ) {\n\t\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'transitionEnd', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\t\t\tsetSlideHeight( this );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$swiper.on( 'resize', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t\t} );\n\n\t\t\t\t/**\n\t\t\t\t * Use beforeInit instead of init to avoid broken slider view auto.\n\t\t\t\t * Updated: On some cases Normal per views return \"auto\" instead of real per view on beforeInit\n\t\t\t\t * then we needed init event to avoid broken render.\n\t\t\t\t */\n\t\t\t\t$swiper.on( 'beforeInit', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'init', function() {\n\t\t\t\t\tvar slidesPerView = this.params.slidesPerView;\n\t\t\t\t\t$( this.$wrapperEl ).attr( 'data-active-items', slidesPerView );\n\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tvar visibleSlide = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tvisibleSlide.addClass( 'subwallet-slide-active' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'slideChangeTransitionEnd', function() {\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tvar visibleSlide = $( slides ).filter( '.swiper-slide-visible' );\n\t\t\t\t\tvisibleSlide.addClass( 'subwallet-slide-active' );\n\t\t\t\t} );\n\n\t\t\t\t$swiper.on( 'slideChangeTransitionStart', function() {\n\t\t\t\t\tvar slides = $swiper.$wrapperEl.find( '.swiper-slide' );\n\t\t\t\t\tslides.removeClass( 'subwallet-slide-active' );\n\t\t\t\t} );\n\n\t\t\t\t// If lazy load + retina enable.\n\t\t\t\tif ( $.fn.laziestloader ) {\n\t\t\t\t\t$slider.elementorWaypoint( function() {\n\t\t\t\t\t\tvar _self = this.element ? this.element : this;\n\t\t\t\t\t\tvar $self = $( _self );\n\t\t\t\t\t\tvar llImages = $self.find( '.ll-image' );\n\n\t\t\t\t\t\tif ( llImages.length > 0 ) {\n\t\t\t\t\t\t\tllImages.laziestloader( {}, function() {\n\t\t\t\t\t\t\t\t$( this ).unwrap( '.subwallet-lazy-image' );\n\t\t\t\t\t\t\t} ).trigger( 'laziestloader' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\toffset: '90%',\n\t\t\t\t\t\ttriggerOnce: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Center Mode Handler\n\t\t\t\t */\n\t\t\t\tif ( sliderSettings.centeredHightlight && 'scale' === sliderSettings.centeredHightlight ) {\n\t\t\t\t\t$swiper.on( 'beforeInit resize', function() {\n\t\t\t\t\t\tsetSlideHeightCenterMode( this );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$swiper.init();\n\n\t\t\t\tif ( $slider.hasClass( 'pagination-style-04' ) || $slider.hasClass( 'pagination-style-08' ) ) {\n\t\t\t\t\t$slider.on( 'click', '.swiper-alt-arrow-button', function() {\n\t\t\t\t\t\tvar action = $( this ).data( 'action' );\n\n\t\t\t\t\t\tswitch ( action ) {\n\t\t\t\t\t\t\tcase 'prev' :\n\t\t\t\t\t\t\t\t$swiper.slidePrev();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'next' :\n\t\t\t\t\t\t\t\t$swiper.slideNext();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t$( document ).trigger( 'subwalletSwiperInit', [ $swiper, $slider, swiperOptions ] );\n\t\t\t} );\n\n\t\t\treturn $swiper;\n\t\t};\n\n\t\tfunction parseNumberValue( setting = '', defaultValue = '' ) {\n\t\t\tif ( undefined === setting || '' === setting || isNaN( setting ) ) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\n\t\t\treturn parseInt( setting );\n\t\t}\n\n\t\tfunction parseItemValue( setting = '', defaultValue = '' ) {\n\t\t\tif ( undefined === setting || '' === setting ) {\n\t\t\t\treturn defaultValue;\n\t\t\t}\n\n\t\t\t// Normalize slide per view, reset fake view to exist view.\n\t\t\tif ( 'auto-fixed' === setting ) {\n\t\t\t\treturn 'auto';\n\t\t\t}\n\n\t\t\treturn setting;\n\t\t}\n\n\t\tfunction parseItemGroupValue( setting = '', inherit, itemsPerView ) {\n\t\t\tif ( 'auto' === itemsPerView ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( 'auto' === inherit ) {\n\t\t\t\tinherit = 1;\n\t\t\t} else if ( 'inherit' === inherit || parseInt( inherit ) > parseInt( itemsPerView ) ) {\n\t\t\t\tinherit = itemsPerView;\n\t\t\t}\n\n\t\t\tif ( undefined === setting || '' === setting ) {\n\t\t\t\treturn inherit || 1;\n\t\t\t} else if ( 'inherit' === setting ) {\n\t\t\t\treturn itemsPerView || 1;\n\t\t\t}\n\n\t\t\treturn parseInt( setting );\n\t\t}\n\n\t\tfunction setSlideHeight( that ) {\n\t\t\tvar slides = that.$wrapperEl.find( '.swiper-slide' );\n\t\t\tslides.css( { height: 'auto' } );\n\t\t\tvar currentSlide = that.activeIndex;\n\t\t\tvar itemHeight = $( that.slides[ currentSlide ] ).height();\n\n\t\t\tvar slidesPerView = that.params.slidesPerView;\n\t\t\tvar spaceBetween = that.params.spaceBetween;\n\t\t\tvar wrapperHeight = slidesPerView * itemHeight + (\n\t\t\t\tslidesPerView - 1\n\t\t\t) * spaceBetween;\n\n\t\t\t$( that.$el ).height( wrapperHeight );\n\t\t\t$( that.$wrapperEl ).find( '.swiper-slide' ).height( itemHeight );\n\n\t\t\tthat.update();\n\t\t}\n\n\t\tfunction setSlideHeightCenterMode( that ) {\n\t\t\tvar slides = that.$wrapperEl.find( '.swiper-slide' ).each( function() {\n\t\t\t\tvar $thisSlide = $( this );\n\t\t\t\t$thisSlide.css( '--placeholder-height', $thisSlide.children().height() + 'px' );\n\t\t\t} );\n\t\t}\n\n\t\t// Get total slides.\n\t\tfunction getTotalSlides( swiper ) {\n\t\t\tvar slidesLength = swiper.slides.length;\n\t\t\tvar total = swiper.params.loop ? Math.ceil( (\n\t\t\t\t                                            slidesLength - (\n\t\t\t\t\t                                            swiper.loopedSlides * 2\n\t\t\t\t                                            )\n\t\t\t                                            ) / swiper.params.slidesPerGroup ) : swiper.snapGrid.length;\n\n\t\t\treturn total;\n\t\t}\n\n\t\t// Get current index.\n\t\tfunction getCurrentIndex( swiper ) {\n\t\t\tvar slidesLength = swiper.slides.length;\n\t\t\tvar total = getTotalSlides( swiper );\n\t\t\tvar current;\n\n\t\t\tif ( swiper.params.loop ) {\n\t\t\t\tcurrent = Math.ceil( (\n\t\t\t\t\t                     swiper.activeIndex - swiper.loopedSlides\n\t\t\t\t                     ) / swiper.params.slidesPerGroup );\n\t\t\t\tif ( current > slidesLength - 1 - (\n\t\t\t\t\tswiper.loopedSlides * 2\n\t\t\t\t) ) {\n\t\t\t\t\tcurrent -= (\n\t\t\t\t\t\tslidesLength - (\n\t\t\t\t\t\t\tswiper.loopedSlides * 2\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( current > total - 1 ) {\n\t\t\t\t\tcurrent -= total;\n\t\t\t\t}\n\t\t\t\tif ( current < 0 && swiper.params.paginationType !== 'bullets' ) {\n\t\t\t\t\tcurrent = total + current;\n\t\t\t\t}\n\t\t\t} else if ( typeof swiper.snapIndex !== 'undefined' ) {\n\t\t\t\tcurrent = swiper.snapIndex;\n\t\t\t} else {\n\t\t\t\tcurrent = swiper.activeIndex || 0;\n\t\t\t}\n\n\t\t\treturn current;\n\t\t}\n\n\t}( jQuery )\n);\n"]}